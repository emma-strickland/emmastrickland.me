{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["config","API_BASE_URL","NAME","EMAIL_ADDRESS","LINKEDIN_URL","GITHUB_URL","SPOTIFY_PROFILE_URL","App","useState","response","setResponse","isLoading","setIsLoading","useEffect","fetch","then","res","json","result","catch","error","console","log","className","href","target","rel","src","image","alt","onClick","window","open","track","artist","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKAYeA,G,MAZA,CACXC,aAEM,yCACNC,KAAM,kBACNC,cAAe,sBACfC,aAAc,+CACdC,WAAY,qCACZC,oBAAqB,iE,OC0DVC,MA9Df,WACE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAiBA,OAXAC,qBAAU,WACRC,MAAM,GAAD,OAAId,EAAOC,aAAX,oBACFc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJR,EAAYQ,GACZN,GAAa,MACZO,OAAM,SAAAC,GACPC,QAAQC,IAAI,UAAWF,QAE1B,IAGD,qBAAKG,UAAU,MAAf,SAEE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,QAAf,SAAwBvB,EAAOE,OAC/B,sBAAKqB,UAAU,UAAf,oDAEE,uBACA,qBAAKA,UAAU,OAAf,SACE,mBAAGC,KAAI,iBAAYxB,EAAOG,eAAiBsB,OAAO,SAASC,IAAI,sBAA/D,qBAIF,qBAAKH,UAAU,OAAf,SACE,mBAAGC,KAAMxB,EAAOI,aAAcqB,OAAO,SAASC,IAAI,sBAAlD,wBAIF,qBAAKH,UAAU,OAAf,SACE,mBAAGC,KAAMxB,EAAOK,WAAYoB,OAAO,SAASC,IAAI,sBAAhD,sBAIF,uBACA,qBAAKH,UAAU,UAAf,qCAIEZ,EAKA,qBAAKY,UAAU,UAAf,wBAJA,sBAAKA,UAAU,aAAf,UACE,qBAAKI,IAAKlB,EAASmB,MAAOC,IAAI,YAAYN,UAAU,YAAYO,QA7CjD,WACzBC,OAAOC,KAAKhC,EAAOM,oBAAqB,aA6C9B,sBAAKiB,UAAU,iBAAf,cAAkCd,EAASwB,MAA3C,YAAsDxB,EAASyB,sBC1C9DC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.15befc64.chunk.js","sourcesContent":["const config = {\n    API_BASE_URL: process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:4001\"\n        : \"https://emmastrickland-me.onrender.com\",\n    NAME: \"Emma Strickland\",\n    EMAIL_ADDRESS: \"emlstrick@gmail.com\",\n    LINKEDIN_URL: \"https://www.linkedin.com/in/emmalstrickland/\",\n    GITHUB_URL: \"https://github.com/emma-strickland\",\n    SPOTIFY_PROFILE_URL: \"https://open.spotify.com/user/1242322676?si=865f2ec92d6a4a14\",\n\n}\n\nexport default config;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport config from './config';\n\nfunction App() {\n  const [response, setResponse] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  const openSpotifyProfile = () => {\n    window.open(config.SPOTIFY_PROFILE_URL, \"_blank\");\n  }\n\n  useEffect(() => {\n    fetch(`${config.API_BASE_URL}/recentlyPlayed`)\n      .then(res => res.json())\n      .then(result => {\n        setResponse(result);\n        setIsLoading(false)\n      }).catch(error => {\n        console.log('error: ', error);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {/* {response && ( */}\n      <div className=\"container\">\n        <div className=\"title\">{config.NAME}</div>\n        <div className=\"subtext\">\n          Software Engineer based in Brooklyn, NY\n          <hr />\n          <div className=\"link\">\n            <a href={`mailto:${config.EMAIL_ADDRESS}`} target=\"_blank\" rel=\"noopener noreferrer\">\n              Email\n            </a>\n          </div>\n          <div className=\"link\">\n            <a href={config.LINKEDIN_URL} target=\"_blank\" rel=\"noopener noreferrer\">\n              LinkedIn\n            </a>\n          </div>\n          <div className=\"link\">\n            <a href={config.GITHUB_URL} target=\"_blank\" rel=\"noopener noreferrer\">\n              Github\n            </a>\n          </div>\n          <hr />\n          <div className=\"current\">\n            Currently listening to:\n          </div>\n\n          {!isLoading ?\n            <div className=\"music-text\">\n              <img src={response.image} alt=\"album-art\" className=\"album-art\" onClick={openSpotifyProfile} />\n              <div className=\"music-subtitle\">\"{response.track}\" â€“ {response.artist}</div>\n            </div> :\n            <div className=\"current\">Loading...</div>\n          }\n\n        </div>\n      </div>\n      {/* )} */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}